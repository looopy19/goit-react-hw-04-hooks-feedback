{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Container/Container.styles.jsx","components/Container/Container.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Button/Button.styles.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Wrapper","styled","section","Title","h2","Section","title","children","div","Container","List","ul","Item","li","Text","p","Statistics","good","neutral","bad","total","positivePercentage","percentage","Btn","button","Button","feedback","onClick","type","size","color","style","marginRight","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","Message","Notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","totalFeedback","Math","round","countPositiveFeedbackPercentage","e","currentTarget","dataset","prevState","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dd38e64.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.section`\r\n  padding: 40px 0;\r\n`;\r\nexport const Title = styled.h2`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-transform: uppercase;\r\n  font-size: 22px;\r\n  text-align: center;\r\n \r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper, Title } from \"./Section.styles\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <Wrapper>\r\n            {title && (\r\n                <Title>\r\n                    {title}\r\n                    {title === \"Please leave feedback\" }\r\n                    {title === \"Statistics\"}\r\n                </Title>\r\n            )}\r\n\r\n            {children}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 1024px;\r\n  margin: 0 auto;\r\n  padding: 0 50px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper } from \"./Container.styles\";\r\n\r\nconst Container = ({ children }) => {\r\n    return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\ntext-align: center;\r\n`;\r\n\r\nexport const Item = styled.li`\r\nmargin-bottom: 5px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  align-items: center;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {List, Item, Text } from \"./Statistics.styles\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage = 0 }) => {\r\n    return (\r\n        <List>\r\n            <Item>\r\n                <Text good>\r\n                     Good: {good}\r\n                </Text>\r\n            </Item>\r\n            <Item>\r\n                <Text neutral>\r\n                     Neutral: {neutral}\r\n                </Text>\r\n            </Item>\r\n            <Item>\r\n                <Text bad>\r\n                   Bad: {bad}\r\n                </Text>\r\n            </Item>\r\n            <Item>\r\n                <Text total>\r\n                     Total: {total}\r\n                </Text>\r\n            </Item>\r\n            <Item>\r\n                <Text percentage>\r\n                    Positive: {positivePercentage} %\r\n                </Text>\r\n            </Item>\r\n        </List>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import styled from \"@emotion/styled\";\r\n\r\nexport const Btn = styled.button`\r\n  width: 140px;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid gray;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  text-transform: capitalize;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  transition: all 250ms ease-in-out;\r\n  \r\n \r\n  \r\n  &:hover,\r\n  &:focus-visible {\r\n    background-color: ghostwhite;\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Btn } from \"./Button.styles\";\r\nimport { RiEmotionHappyLine, RiEmotionNormalLine, RiEmotionUnhappyLine } from \"react-icons/ri\";\r\n\r\nconst Button = ({ feedback, onClick }) => {\r\n    return (\r\n        <Btn type=\"button\" data-feedback={feedback} onClick={onClick}>\r\n            {feedback === \"good\" && (\r\n                <RiEmotionHappyLine size=\"50\" color=\"green\" style={{ marginRight:10}}/>\r\n            )}\r\n            {feedback === \"neutral\" && (\r\n                <RiEmotionNormalLine size=\"50\" color=\"grey\" style={{ marginRight: 10 }} />\r\n            )}\r\n            {feedback === \"bad\" && (\r\n                <RiEmotionUnhappyLine size=\"50\" color=\"red\" style={{ marginRight: 10 }}/>\r\n            )}\r\n            {feedback}\r\n        </Btn>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    feedback: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 50px;\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport Button from \"../Button/Button\";\r\nimport { List, Item } from \"./FeedbackOptions.styles\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    options = Object.keys(options);\r\n\r\n    return (\r\n        <List>\r\n            {options.map((option) => (\r\n                <Item key={option}>\r\n                    <Button feedback={option} onClick={onLeaveFeedback} />\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.shape({\r\n        good: PropTypes.number.isRequired,\r\n        neutral: PropTypes.number.isRequired,\r\n        bad: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const Message = styled.p`\r\n  text-align: center;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;","import { Message } from \"./Notification.styles\";\r\n\r\nconst Notification = () => (\r\n    <Message>\r\n        No feedback given \r\n    </Message>\r\n);\r\n\r\nexport default Notification;","import { useState } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport Container from \"./components/Container/Container\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\n\nconst App = () => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    const handleFeedbackOptions = (e) => {\n        const feedback = e.currentTarget.dataset.feedback;\n\n        switch (feedback) {\n            case 'good':\n                setGood((prevState) => prevState + 1)\n                break;\n        \n            case 'neutral':\n                setNeutral((prevState) => prevState + 1)\n                break;\n        \n            case 'bad':\n                setBad((prevState) => prevState + 1)\n                break;\n        \n            default:\n                return;\n        }\n    }\n\n    const countTotalFeedback = () => {\n        return good + neutral + bad;\n    }\n\n    const countPositiveFeedbackPercentage = () => {\n        const total = countTotalFeedback();\n\n        return Math.round((good * 100) / total);\n    }\n\n        const totalFeedback = countTotalFeedback();\n        const positivePercentage = countPositiveFeedbackPercentage();\n\n        return (\n            <>\n                <Section title=\"Please leave feedback\">\n                    <Container>\n                        <FeedbackOptions\n                            options={{ good, neutral, bad}}\n                            onLeaveFeedback={handleFeedbackOptions}\n                        />\n                    </Container>\n                </Section>\n\n                <Section title=\"Statistics\">\n                    <Container>\n                        {totalFeedback > 0 ? (\n                            <Statistics\n                                good={good}\n                                neutral={neutral}\n                                bad={bad}\n                                total={totalFeedback}\n                                positivePercentage={positivePercentage}\n                            />\n                        ) : (\n                            <Notification message=\"No feedback given\"></Notification>\n                        )}\n                    </Container>\n                </Section>\n            </>\n        );\n    \n}\n\n    export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}